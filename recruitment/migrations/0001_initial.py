# Generated by Django 5.0.4 on 2024-04-10 14:52

import django.core.validators
import django.db.models.deletion
import recruitment.utilities
import recruitment.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_alter_user_first_name_alter_user_last_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('county_of_birth', models.CharField(choices=[('bomi', 'Bomi'), ('bong', 'Bong'), ('gbarpolu', 'Gbarpolu'), ('grand bassa', 'Grand Bassa'), ('grand cape mount', 'Grand Cape Mount'), ('grand gedeh', 'Grand Gedeh'), ('grand kru', 'Grand Kru'), ('lofa', 'Lofa'), ('margibi', 'Margibi'), ('maryland', 'Maryland'), ('montserrado', 'Montserrado'), ('nimba', 'Nimba'), ('river cess', 'River cess'), ('river gee', 'River Gee'), ('sinoe', 'Sinoe')], max_length=16)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('birth_date', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6)),
                ('religion', models.CharField(choices=[('christian', 'Christian'), ('muslim', 'Muslim'), ('none', 'None')], max_length=9)),
                ('image', models.ImageField(upload_to=recruitment.utilities.image_upload_path, validators=[recruitment.validators.validate_file_size])),
                ('joined_at', models.DateField(auto_now_add=True)),
                ('id_number', models.CharField(default=recruitment.utilities.applicant_id_number_generator, max_length=255)),
                ('status', models.CharField(default='Under review', max_length=100)),
                ('rejection_reason', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicationDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('open_year', models.PositiveIntegerField(validators=[recruitment.validators.validate_year])),
                ('open_month', models.PositiveIntegerField()),
                ('open_date', models.PositiveIntegerField()),
                ('close_year', models.PositiveIntegerField(validators=[recruitment.validators.validate_year])),
                ('close_month', models.PositiveIntegerField()),
                ('close_date', models.PositiveIntegerField()),
                ('is_current', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('county_of_birth', models.CharField(choices=[('bomi', 'Bomi'), ('bong', 'Bong'), ('gbarpolu', 'Gbarpolu'), ('grand bassa', 'Grand Bassa'), ('grand cape mount', 'Grand Cape Mount'), ('grand gedeh', 'Grand Gedeh'), ('grand kru', 'Grand Kru'), ('lofa', 'Lofa'), ('margibi', 'Margibi'), ('maryland', 'Maryland'), ('montserrado', 'Montserrado'), ('nimba', 'Nimba'), ('river cess', 'River cess'), ('river gee', 'River Gee'), ('sinoe', 'Sinoe')], max_length=16)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('birth_date', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6)),
                ('religion', models.CharField(choices=[('christian', 'Christian'), ('muslim', 'Muslim'), ('none', 'None')], max_length=9)),
                ('image', models.ImageField(upload_to=recruitment.utilities.image_upload_path, validators=[recruitment.validators.validate_file_size])),
                ('joined_at', models.DateField(auto_now_add=True)),
                ('qualification', models.CharField(choices=[('bachelor', 'Bachelor'), ('master', 'Master'), ('phd', 'PhD')], max_length=8)),
                ('employment', models.CharField(choices=[('internship', 'Internship'), ('part timer', 'Part Timer'), ('full timer', 'Full Timer')], max_length=255)),
                ('position', models.CharField(max_length=255)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=6)),
                ('exit_date', models.DateField(null=True)),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='recruitment.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('position', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Pyp',
            fields=[
                ('county_of_birth', models.CharField(choices=[('bomi', 'Bomi'), ('bong', 'Bong'), ('gbarpolu', 'Gbarpolu'), ('grand bassa', 'Grand Bassa'), ('grand cape mount', 'Grand Cape Mount'), ('grand gedeh', 'Grand Gedeh'), ('grand kru', 'Grand Kru'), ('lofa', 'Lofa'), ('margibi', 'Margibi'), ('maryland', 'Maryland'), ('montserrado', 'Montserrado'), ('nimba', 'Nimba'), ('river cess', 'River cess'), ('river gee', 'River Gee'), ('sinoe', 'Sinoe')], max_length=16)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('birth_date', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6)),
                ('religion', models.CharField(choices=[('christian', 'Christian'), ('muslim', 'Muslim'), ('none', 'None')], max_length=9)),
                ('image', models.ImageField(upload_to=recruitment.utilities.image_upload_path, validators=[recruitment.validators.validate_file_size])),
                ('joined_at', models.DateField(auto_now_add=True)),
                ('id_number', models.CharField(default=recruitment.utilities.pyp_id_number_generator, max_length=255)),
                ('placement_date', models.DateField(blank=True, null=True)),
                ('tor', models.FileField(blank=True, null=True, upload_to=recruitment.utilities.tor_upload_path)),
                ('employement_date', models.DateField(blank=True, null=True)),
                ('position', models.CharField(default='PYP Fellow', max_length=100)),
                ('is_current', models.BooleanField(default=True)),
                ('application_date', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pyps', to='recruitment.applicationdate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicantAddress',
            fields=[
                ('county_of_birth', models.CharField(choices=[('bomi', 'Bomi'), ('bong', 'Bong'), ('gbarpolu', 'Gbarpolu'), ('grand bassa', 'Grand Bassa'), ('grand cape mount', 'Grand Cape Mount'), ('grand gedeh', 'Grand Gedeh'), ('grand kru', 'Grand Kru'), ('lofa', 'Lofa'), ('margibi', 'Margibi'), ('maryland', 'Maryland'), ('montserrado', 'Montserrado'), ('nimba', 'Nimba'), ('river cess', 'River cess'), ('river gee', 'River Gee'), ('sinoe', 'Sinoe')], max_length=16)),
                ('country', models.CharField(default='Liberia', max_length=7)),
                ('district', models.PositiveIntegerField(validators=[recruitment.validators.validate_district])),
                ('community', models.CharField(max_length=100)),
                ('house_address', models.CharField(max_length=100)),
                ('applicant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='address', serialize=False, to='recruitment.applicant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicantContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='recruitment.applicant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicantDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.CharField(choices=[('bachelor', 'Bachelor'), ('master', 'Master'), ('phd', 'PhD')], max_length=8)),
                ('graduation_year', models.PositiveIntegerField(validators=[recruitment.validators.validate_year])),
                ('major', models.CharField(max_length=100)),
                ('manor', models.CharField(max_length=100)),
                ('institution', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('degree', models.FileField(upload_to=recruitment.utilities.degree_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('ccgpa', models.DecimalField(decimal_places=2, max_digits=3)),
                ('application_letter', models.FileField(upload_to=recruitment.utilities.application_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('community_letter', models.FileField(upload_to=recruitment.utilities.community_letter_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('reference_letter', models.FileField(upload_to=recruitment.utilities.reference_letter_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('resume', models.FileField(upload_to=recruitment.utilities.resume_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('police_clearance', models.FileField(upload_to=recruitment.utilities.police_clearance_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='recruitment.applicant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='applicant',
            name='application_date',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='applicants', to='recruitment.applicationdate'),
        ),
        migrations.CreateModel(
            name='ApplicationStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('publicity', 'Publicity'), ('credential varification', 'Credential varification'), ('writen exams', 'Writen exams'), ('interview', 'Interview'), ('job readiness orientation', 'Job readiness orientation'), ('placement', 'Placement')], max_length=25)),
                ('status', models.CharField(choices=[('under review', 'Under review'), ('pending', 'Pending'), ('unsuccessful', 'Unsuccessful'), ('successful', 'Successful')], max_length=13)),
                ('rejection_reason', models.CharField(blank=True, choices=[('police clearance', 'Police clearance'), ('national id', 'National ID'), ('diploma', 'Diploma'), ('transcript', 'Transcript'), ('writen exams', 'Written exams'), ('interview', 'Interview'), ('job readiness', 'Job readiness'), ('absent', 'Absent'), ('document', 'Document'), ('disorderly conduct', 'Disorderly conduct'), ('other', 'Other')], max_length=18, null=True)),
                ('other_rejection_reason', models.TextField(blank=True, null=True)),
                ('is_rejected', models.BooleanField(default=False)),
                ('is_current', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_recruitment_complemented', models.BooleanField(default=False)),
                ('applicants', models.ManyToManyField(related_name='stages', to='recruitment.applicant')),
                ('application_date', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stages', to='recruitment.applicationdate')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stages', to='recruitment.employee')),
            ],
        ),
        migrations.CreateModel(
            name='CohortSponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('application_date', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='recruitment.applicationdate')),
            ],
        ),
        migrations.CreateModel(
            name='Cohort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_currnt', models.BooleanField(default=True)),
                ('rejected_male_count', models.PositiveIntegerField()),
                ('rejected_female_count', models.PositiveIntegerField()),
                ('rejected_police_clearance_count', models.PositiveIntegerField()),
                ('rejected_national_id_count', models.PositiveIntegerField()),
                ('rejected_diploma_count', models.PositiveIntegerField()),
                ('rejected_transcript', models.PositiveIntegerField()),
                ('rejected_exams_count', models.PositiveIntegerField()),
                ('rejected_interview_count', models.PositiveIntegerField()),
                ('rejected_job_readiness_count', models.PositiveIntegerField()),
                ('rejection_absent_count', models.PositiveIntegerField()),
                ('rejection_other_count', models.PositiveIntegerField()),
                ('application_date', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='recruitment.applicationdate')),
                ('sponsors', models.ManyToManyField(related_name='cohorts', to='recruitment.cohortsponsor')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeAddress',
            fields=[
                ('county_of_birth', models.CharField(choices=[('bomi', 'Bomi'), ('bong', 'Bong'), ('gbarpolu', 'Gbarpolu'), ('grand bassa', 'Grand Bassa'), ('grand cape mount', 'Grand Cape Mount'), ('grand gedeh', 'Grand Gedeh'), ('grand kru', 'Grand Kru'), ('lofa', 'Lofa'), ('margibi', 'Margibi'), ('maryland', 'Maryland'), ('montserrado', 'Montserrado'), ('nimba', 'Nimba'), ('river cess', 'River cess'), ('river gee', 'River Gee'), ('sinoe', 'Sinoe')], max_length=16)),
                ('country', models.CharField(default='Liberia', max_length=7)),
                ('district', models.PositiveIntegerField(validators=[recruitment.validators.validate_district])),
                ('community', models.CharField(max_length=100)),
                ('house_address', models.CharField(max_length=100)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='address', serialize=False, to='recruitment.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicationStageCompletedAuditTrial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_is_cruitment_completed', models.BooleanField()),
                ('new_is_cruitment_completed', models.BooleanField()),
                ('application_stage', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='recruitment.applicationstage')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='recruitment.employee')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicantStatusAuditTrial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_status', models.CharField(max_length=255)),
                ('new_status', models.CharField(max_length=255)),
                ('action', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='audits', to='recruitment.applicant')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='recruitment.employee')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='recruitment.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeeDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='recruitment.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.CharField(choices=[('bachelor', 'Bachelor'), ('master', 'Master'), ('phd', 'PhD')], max_length=8)),
                ('graduation_year', models.PositiveIntegerField(validators=[recruitment.validators.validate_year])),
                ('major', models.CharField(max_length=100)),
                ('manor', models.CharField(max_length=100)),
                ('institution', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('degree', models.FileField(upload_to=recruitment.utilities.degree_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('ccgpa', models.DecimalField(decimal_places=2, max_digits=3)),
                ('application_letter', models.FileField(upload_to=recruitment.utilities.application_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('community_letter', models.FileField(upload_to=recruitment.utilities.community_letter_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('reference_letter', models.FileField(upload_to=recruitment.utilities.reference_letter_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('resume', models.FileField(upload_to=recruitment.utilities.resume_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='recruitment.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeeEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('serial_number', models.CharField(max_length=100, unique=True)),
                ('storage', models.CharField(max_length=100)),
                ('processor_type', models.CharField(max_length=100)),
                ('ram_capicity', models.CharField(max_length=100)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='recruitment.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeeInstitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='institutions', to='recruitment.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MentorContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='recruitment.mentor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PypAddress',
            fields=[
                ('county_of_birth', models.CharField(choices=[('bomi', 'Bomi'), ('bong', 'Bong'), ('gbarpolu', 'Gbarpolu'), ('grand bassa', 'Grand Bassa'), ('grand cape mount', 'Grand Cape Mount'), ('grand gedeh', 'Grand Gedeh'), ('grand kru', 'Grand Kru'), ('lofa', 'Lofa'), ('margibi', 'Margibi'), ('maryland', 'Maryland'), ('montserrado', 'Montserrado'), ('nimba', 'Nimba'), ('river cess', 'River cess'), ('river gee', 'River Gee'), ('sinoe', 'Sinoe')], max_length=16)),
                ('country', models.CharField(default='Liberia', max_length=7)),
                ('district', models.PositiveIntegerField(validators=[recruitment.validators.validate_district])),
                ('community', models.CharField(max_length=100)),
                ('house_address', models.CharField(max_length=100)),
                ('pyp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='address', serialize=False, to='recruitment.pyp')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='pyp',
            name='cohort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pyps', to='recruitment.cohort'),
        ),
        migrations.AddField(
            model_name='mentor',
            name='pyp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentors', to='recruitment.pyp'),
        ),
        migrations.CreateModel(
            name='PypContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('pyp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='recruitment.pyp')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('position', models.CharField(max_length=100)),
                ('pyp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supervisors', to='recruitment.pyp')),
            ],
        ),
        migrations.CreateModel(
            name='PypDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.CharField(choices=[('bachelor', 'Bachelor'), ('master', 'Master'), ('phd', 'PhD')], max_length=8)),
                ('graduation_year', models.PositiveIntegerField(validators=[recruitment.validators.validate_year])),
                ('major', models.CharField(max_length=100)),
                ('manor', models.CharField(max_length=100)),
                ('institution', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('degree', models.FileField(upload_to=recruitment.utilities.degree_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('ccgpa', models.DecimalField(decimal_places=2, max_digits=3)),
                ('application_letter', models.FileField(upload_to=recruitment.utilities.application_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('community_letter', models.FileField(upload_to=recruitment.utilities.community_letter_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('reference_letter', models.FileField(upload_to=recruitment.utilities.reference_letter_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('resume', models.FileField(upload_to=recruitment.utilities.resume_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('police_clearance', models.FileField(upload_to=recruitment.utilities.police_clearance_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('pyp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='recruitment.pyp')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PypEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('serial_number', models.CharField(max_length=100, unique=True)),
                ('storage', models.CharField(max_length=100)),
                ('processor_type', models.CharField(max_length=100)),
                ('ram_capicity', models.CharField(max_length=100)),
                ('pyp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='recruitment.pyp')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PypInstitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('pyp', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='institutions', to='recruitment.pyp')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RejectedApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicants', models.ManyToManyField(related_name='rejected_applicants', to='recruitment.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='SupervisorContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='recruitment.supervisor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PypDepartment',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('supervisor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='department', serialize=False, to='recruitment.supervisor')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='departments', to='recruitment.pypinstitution')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
